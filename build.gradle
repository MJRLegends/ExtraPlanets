buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'

version = "1.12.2-0.7.4"
group = "com.mjr.extraplanets"
archivesBaseName = "ExtraPlanets"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            jvmArg '-Dfml.coreMods.load=micdoodle8.mods.miccore.MicdoodlePlugin'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        url = 'https://maven.galacticraft.net/repository/maven-common/'
    }
    maven {
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'Blame Jared Maven'
        url 'https://maven.blamejared.com'
    }
    maven {
        name 'Redstone Flux'
        url = "https://maven.covers1624.net"
    }
    maven {
        name 'IC2'
        url = "https://maven.ic2.player.to"
    }
    maven {
        name 'MJRLegends'
        url = "https://maven.mjrlegends.com/"
    }
    maven {
        name 'galacticraft'
        url = 'https://maven.galacticraft.net/repository/legacy'
    }
    maven {
        name 'CurseMaven'
        url 'https://www.cursemaven.com'
    }
}

dependencies {
    compileOnly fg.deobf("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${version_minetweaker}")
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    compileOnly("CraftTweaker2:CraftTweaker2-API:${version_minetweaker}")
    compileOnly fg.deobf("mezz.jei:jei_${mc_version}:${jei_version}:api")
    compileOnly fg.deobf("cofh:RedstoneFlux:${version_rf}:deobf")
    compileOnly fg.deobf("net.industrial-craft:industrialcraft-2:${version_ic2}:api")
    implementation fg.deobf("com.mjr.mjrlegendslib:MJRLegendsLib:${version_mjrlegendslib}:dev")
    compileOnly fg.deobf("com.mjr.planetprogression:PlanetProgression:${version_planetprogression}:api")
    compileOnly fg.deobf("curse.maven:mekanism-api-268560:2572882")
    compileOnly fg.deobf("curse.maven:numina-235440:2715198")
    compileOnly fg.deobf("curse.maven:modularpowersuits-235442:2743885")
    compileOnly fg.deobf("curse.maven:buildcraft-61811:3204475")
    runtimeOnly fg.deobf("mezz.jei:jei_${mc_version}:${jei_version}")

    // If addon is not using mappings stable_39, use this to have mappings match
    implementation fg.deobf("dev.galacticraft:galacticraft-legacy:4.0.4")

    // if addon IS using stable_39, use this since mappings match already
    //implementation fg.deobf("dev.galacticraft:galacticraft-legacy:4.0.4-SNAPSHOT:deobf")
}

jar.finalizedBy('reobfJar')

task signJar(type: net.minecraftforge.gradle.common.task.SignJar) {
    onlyIf { project.hasProperty('keyStore') }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

task apiJar(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    classifier = 'api'
    include 'com/mjr/extraplanets/api/**'
    from sourceSets.main.java
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    classifier = 'sources'
    from sourceSets.main.java
    from sourceSets.main.resources
}

task deobfJar(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    classifier = 'dev'
    from sourceSets.main.output
}

artifacts {
    archives apiJar, deobfJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version

            artifact deobfJar
            artifact apiJar
        }
    }
    repositories {
        mavenLocal()
    }
}

curseforge {
    if (project.hasProperty('curseforge_key')) {
        apiKey = project.findProperty("curseforge_key")
        project {
            id = "241291"
            releaseType = "release"
            addGameVersion "${mc_version}"
            mainArtifact(jar) {
                relations {
                    requiredLibrary 'mjrlegendslib'
                }
            }
            addArtifact(apiJar)
            addArtifact(deobfJar)
        }
    }
}

build.dependsOn signJar