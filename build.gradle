def minecraft_version="1.8.9"
def jei_version="2.28.7.174"
def version_mjrlegendslib="1.8.9-1.1.2"
def version_planetprogression="1.8.9-0.2.7"
def version_galacticraft="1.8.9-4.0.1.184"
def version_ic2="2.3.264-ex18"

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
	maven {
	    name 'IC2'
	    url = "http://maven.ic2.player.to"
    }
	maven {
	    name 'MJRLegends'
	    url = "https://maven.mjrlegends.com/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.8.9-1.6.3"
group= "com.mjr.extraplanets" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExtraPlanets"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_20"
    makeObfSourceJar = true // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile "mezz.jei:jei_${minecraft_version}:${jei_version}"
	compile "net.industrial-craft:industrialcraft-2:${version_ic2}:api"
	deobfCompile "com.mjr.mjrlegendslib:MJRLegendsLib:${version_mjrlegendslib}:dev"
	compile "com.mjr.planetprogression:PlanetProgression:${version_planetprogression}:api"
	compile files (
		"Galacticraft-API-${version_galacticraft}.jar",
		"GalacticraftCore-Dev-${version_galacticraft}.jar",
		"Galacticraft-Planets-Dev-${version_galacticraft}.jar",
		"MicdoodleCore-Dev-${version_galacticraft}.jar"
	)
	runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"	
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
	//manifest {
    //    attributes.put("FMLAT", "extraplanets_at.cfg")
    //    attributes.put("FMLCorePluginContainsFMLMod", "true")
    //}
}

task apiJar(type: Jar) {
    from(sourceSets.main.output) {
        include "com/mjr/extraplanets/api/**"
    }
	from(sourceSets.main.java) {
        include "com/mjr/extraplanets/api/**"
    }
    classifier = 'api'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.getProperty('keyStore')
    alias = project.getProperty('keyStoreAlias')
    storePass = project.getProperty('keyStorePass')
    keyPass = project.getProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}


artifacts {
    archives apiJar, deobfJar
}

task ("uploadMaven"){
	apply plugin: 'maven'
	uploadArchives {
		repositories {
			mavenDeployer {
				if (project.hasProperty("local_maven")) {
					repository(url: "file://${local_maven}")
				}
			}
		}
	}
}

curseforge {
    if (project.hasProperty('curseforge_key')){
		apiKey = project.getProperty("curseforge_key")
		project {
			id = "241291"
			releaseType = "release"
			addGameVersion "${minecraft_version}"
			mainArtifact(jar) {
				relations {
					requiredLibrary 'mjrlegendslib'
				}
			}
			addArtifact(apiJar)
			addArtifact(deobfJar)
		}
	}
}

build.dependsOn signJar
tasks.build.dependsOn signJar
tasks.curseforge.dependsOn build